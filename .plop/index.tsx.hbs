import { Slot } from '@radix-ui/react-slot';
import { cva, type VariantProps } from 'class-variance-authority';
import * as React from 'react';

import { cn } from '@/lib/utils';

const {{camelCase name}}Variants = cva('', {
  variants: {
    variant: {
      default: '',
      primary: '',
    },
  },
});

export interface {{pascalCase name}}Props
  extends React.HTMLAttributes<HTML{{pascalCase defaultElement}}Element>,
    VariantProps<typeof {{camelCase name}}Variants> {
  asChild?: boolean;
}

export const {{pascalCase name}} = React.forwardRef<HTML{{pascalCase defaultElement}}Element, {{pascalCase name}}Props>(
  ({ className, variant, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : '{{defaultElement}}';
    return (
      <Comp
        className={cn({{camelCase name}}Variants({ variant, className }))}
        ref={ref}
        {...props}
      />
    );
  },
);

{{pascalCase name}}.displayName = '{{pascalCase name}}';
